services:
  app:
    image: 'ibrahim317/frappe-with-app-manager:latest'
    networks:
      - frappe_network
    depends_on:
      db:
        condition: service_healthy
      redis-cache:
        condition: service_healthy
      redis-queue:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - 'env:/home/frappe/frappe-bench/env'
      - 'sites:/home/frappe/frappe-bench/sites'
      - 'logs:/home/frappe/frappe-bench/logs'
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - SERVICE_URL_APP_8000
      - 'REDIS_CACHE=redis-cache:6379'
      - 'REDIS_QUEUE=redis-queue:6379'
      - SOCKETIO_PORT=9000
      - 'BACKEND=localhost:8000'
      - 'SOCKETIO=localhost:9000'
      - UPSTREAM_REAL_IP_ADDRESS=localhost
      - UPSTREAM_REAL_IP_HEADER=X-Forwarded-For
      - UPSTREAM_REAL_IP_RECURSIVE=off
      - PROXY_READ_TIMEOUT=120
      - CLIENT_MAX_BODY_SIZE=50m
    healthcheck:
      test:
        - CMD-SHELL
        - 'wait-for-it -t 15 localhost:8080 && wait-for-it -t 15 localhost:8000 && wait-for-it -t 15 localhost:9000 || exit 1'
      interval: 10s
      timeout: 60s
      retries: 90
      start_period: 15m
  configurator:
    exclude_from_hc: true
    image: 'ibrahim317/frappe-with-app-manager:latest'
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: none
    entrypoint:
      - bash
      - '-c'
    command:
      - |
        ls -1 apps > sites/apps.txt; bench set-config -g db_host $$DB_HOST; bench set-config -gp db_port $$DB_PORT; bench set-config -g redis_cache "redis://$$REDIS_CACHE"; bench set-config -g redis_queue "redis://$$REDIS_QUEUE"; bench set-config -g redis_socketio "redis://$$REDIS_QUEUE"; bench set-config -gp socketio_port $$SOCKETIO_PORT;
    environment:
      DB_HOST: db
      DB_PORT: '3306'
      REDIS_CACHE: 'redis-cache:6379'
      REDIS_QUEUE: 'redis-queue:6379'
      SOCKETIO_PORT: '9000'
    volumes:
      - 'env:/home/frappe/frappe-bench/env'
      - 'sites:/home/frappe/frappe-bench/sites'
      - 'logs:/home/frappe/frappe-bench/logs'
  create-site:
    exclude_from_hc: true
    image: 'ibrahim317/frappe-with-app-manager:latest'
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: none
    volumes:
      - 'env:/home/frappe/frappe-bench/env'
      - 'sites:/home/frappe/frappe-bench/sites'
      - 'logs:/home/frappe/frappe-bench/logs'
    entrypoint:
      - bash
      - '-c'
    command:
      - |
        wait-for-it -t 120 db:3306; wait-for-it -t 120 redis-cache:6379; wait-for-it -t 120 redis-queue:6379; export start=`date +%s`; until [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".db_host // empty"` ]] && \
          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_cache // empty"` ]] && \
          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_queue // empty"` ]];
        do
          echo "Waiting for sites/common_site_config.json to be created";
          sleep 5;
          if (( `date +%s`-start > 120 )); then
            echo "could not find sites/common_site_config.json with required keys";
            exit 1
          fi
        done; echo "sites/common_site_config.json found"; bench new-site --mariadb-user-host-login-scope='%' --admin-password=$$ADMIN_PASSWORD --db-root-username=root --db-root-password=$$DB_ROOT_PASSWORD --install-app app_manager --set-default $$SITE_NAME;
    environment:
      ADMIN_PASSWORD: '${SERVICE_PASSWORD_CREATESITE}'
      DB_ROOT_PASSWORD: '${SERVICE_PASSWORD_MARIADBROOT}'
      SITE_NAME: '${SERVICE_FQDN_APP}'
    depends_on:
      db:
        condition: service_healthy
      redis-cache:
        condition: service_healthy
      redis-queue:
        condition: service_started
      app:
        condition: service_healthy
  db:
    image: 'mariadb:10.6'
    networks:
      - frappe_network
    healthcheck:
      test: 'mysqladmin ping -h localhost --password=$$MARIADB_ROOT_PASSWORD'
      interval: 1s
      retries: 20
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - '--character-set-server=utf8mb4'
      - '--collation-server=utf8mb4_unicode_ci'
      - '--skip-character-set-client-handshake'
      - '--skip-innodb-read-only-compressed'
    environment:
      MARIADB_ROOT_PASSWORD: '${SERVICE_PASSWORD_MARIADBROOT}'
    volumes:
      - 'db-data:/var/lib/mysql'
  redis-queue:
    image: 'redis:6.2-alpine'
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - 'redis-queue-data:/data'
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 10s
      timeout: 5s
      retries: 5
  redis-cache:
    image: 'redis:6.2-alpine'
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - 'redis-cache-data:/data'
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 10s
      timeout: 5s
      retries: 5
  migration:
    exclude_from_hc: true
    image: 'ibrahim317/frappe-with-app-manager:latest'
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: none
    entrypoint:
      - bash
      - '-c'
    command:
      - |
        bench --site all set-config -p maintenance_mode 1; bench --site all set-config -p pause_scheduler 1; bench --site all migrate; bench --site all set-config -p maintenance_mode 0; bench --site all set-config -p pause_scheduler 0;
    volumes:
      - 'env:/home/frappe/frappe-bench/env'
      - 'sites:/home/frappe/frappe-bench/sites'
      - 'logs:/home/frappe/frappe-bench/logs'
volumes:
  db-data: null
  redis-queue-data: null
  redis-cache-data: null
  sites: null
  env: null
  logs: null
networks:
  frappe_network:
    driver: bridge
